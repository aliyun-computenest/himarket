Service:
  RegionId: cn-hangzhou
  DeployType: ros
  OperationMetadata:
    StatusOperationConfigs:
    - TemplateName: ECS单机版
      SupportOperations:
      - Start
      - Stop
      - Restart
    SupportBackup: true
    ModifyParametersConfig:
    - TemplateName: ECS单机版
      Operation:
      - Name: 变更ECS实例规格
        Description: 变更ECS实例规格
        Type: Custom
        Parameters:
        - EcsInstanceType
  UpgradeMetadata:
    Description: 升级
    SupportUpgradeFromVersions: []
    SupportRollback: true
    UpgradeComponents:
    - Configuration
    - Resource
  DeployMetadata:
    SupplierDeployMetadata:
      SupplierTemplateConfigs:
      - Name: ECS单机版
        Url: 'ros_templates/template.yaml'
        ArchitectureDiagramUrl: 'resources/architecture/architecture.jpg'
        AllowedRegions:
        - ap-southeast-1
      ArtifactRelation:
        ecs_image_himarket:
          ArtifactId: ${Artifact.EcsImage.ArtifactId}
          ArtifactVersion: draft
    TemplateConfigs:
    - Name: ECS单机版
      Url: 'ros_templates/template.yaml'
      ArchitectureDiagramUrl: 'resources/architecture/architecture.jpg'
      AllowedRegions:
      - ap-southeast-1
  ServiceType: private
  ServiceInfo:
  - Locale: zh-CN
    Name: HiMarket AI 开放平台
    ShortDescription: "企业可以基于开放平台构建自己的 LLM、MCP 门户等，例如构建像 OpenRouter 这样的模型聚合平台，或者像
      Higress MCP Marketplace 这样的 MCP 市场。\n"
    Image: 
      https://service-info-public.oss-cn-hangzhou.aliyuncs.com/5141674772595072/service-image/1c9f9d38-0eb0-451b-b87e-246541ba2664.png
    Softwares: []
Artifact:
  EcsImage:
    ArtifactType: EcsImage
    ArtifactName: ecs_image_himarket
    Description: himarket EcsImage
    SupportRegionIds:
    - ap-southeast-1
    ArtifactBuildProperty:
      CodeRepo:
        Platform: github
        Owner: LYH-RAIN
        RepoName: aliyun-computenest/himarket
        Branch: main
      RegionId: ap-southeast-1
      CommandType: RunShellScript
      CommandContent: |-
        mkdir -p /root/application
        if [ -e "/root/code/.env" ]; then cp -r "/root/code/.env" "/root/application/"; fi
        mkdir -p "/root/application/mysql"
        if [ -e "/root/code/mysql/data" ]; then cp -r "/root/code/mysql/data" "/root/application/mysql/"; fi
        if [ -e "/root/code/docker-compose.yaml" ]; then cp -r "/root/code/docker-compose.yaml" "/root/application/"; fi
        cd /root/application
        sed -i 's/pull_policy: always/pull_policy: if_not_present/g' docker-compose.yaml
        docker compose -f docker-compose.yaml build 
        docker compose -f docker-compose.yaml pull 2>&1 | stdbuf -oL grep -viE 'Downloading|sha256|extracting|KiB|Downloaded' || true;
